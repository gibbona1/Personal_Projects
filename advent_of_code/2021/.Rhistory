getwd()
myfile <- readLines("input_day07.txt")
myfile
strsplit(myfile, ",")[[1]]
as.integer(strsplit(myfile, ",")[[1]])
as.integer(strsplit('16,1,2,0,4,2,7,1,2,14', ',')[[1]])
tmp_pos <- as.integer(strsplit('16,1,2,0,4,2,7,1,2,14', ',')[[1]])
mean(tmp_pos)
for(i in 1:16){
print(mean(abs(tmp_pos-i)))
}
range(tmp_pos)
pos_range <- range(tmp_pos)
pos_nums <- pos_range[1]:pos_range[2]
pos_nums
for(i in pos_nums){
costs <- c(costs, mean(abs(tmp_pos-i)))
}
costs <- c()
for(i in pos_nums){
costs <- c(costs, mean(abs(tmp_pos-i)))
}
which.min(costs)-1
min(costs)
get_min_cost <- function(vec){
pos_range <- range(vec)
pos_nums  <- pos_range[1]:pos_range[2]
pos_nums
costs <- c()
for(i in pos_nums){
costs <- c(costs, mean(abs(vec-i)))
}
#which.min(costs)-1
return(min(costs))
}
my_pos <- as.integer(strsplit(myfile, ",")[[1]])
get_min_cost(my_pos)
get_min_cost <- function(vec){
pos_range <- range(vec)
pos_nums  <- pos_range[1]:pos_range[2]
pos_nums
costs <- c()
for(i in pos_nums){
costs <- c(costs, sum(abs(vec-i)))
}
#which.min(costs)-1
return(min(costs))
}
get_min_cost(my_pos)
get_min_cost2 <- function(vec){
pos_range <- range(vec)
pos_nums  <- pos_range[1]:pos_range[2]
incr_dist <- function(x) return(x*(x+1)/2)
costs <- c()
for(i in pos_nums){
costs <- c(costs, sum(incr_dist(abs(vec-i))))
}
#which.min(costs)-1
return(min(costs))
}
get_min_cost(tmp_pos)
incr_dist(4)
incr_dist <- function(x) return(x*(x+1)/2)
incr_dist(4)
get_min_cost(tmp_pos)
get_min_cost3(tmp_pos)
get_min_cost2(tmp_pos)
get_min_cost2(my_pos)
get_min_cost(tmp_pos)
get_min_cost(my_pos)
get_min_cost <- function(vec){
pos_range <- range(vec)
pos_nums  <- pos_range[1]:pos_range[2]
pos_nums
costs <- sapply(pos_nums, function(x) sum(abs(vec-x)))
#for(i in pos_nums)
#  costs <- c(costs, sum(abs(vec-i)))
#which.min(costs)-1
return(min(costs))
}
get_min_cost(tmp_pos)
get_min_cost(my_pos)
getwd()
myfile <- readLines("input_day08.txt")
tmp_file <- 'be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb |
fdgacbe cefdb cefbgd gcbe
edbfga begcd cbg gc gcadebf fbgde acbgfd abcde gfcbed gfec |
fcgedb cgb dgebacf gc
fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef |
cg cg fdcagb cbg
fbegcd cbd adcefb dageb afcb bc aefdc ecdab fgdeca fcdbega |
efabcd cedba gadfec cb
aecbfdg fbg gf bafeg dbefa fcge gcbea fcaegb dgceab fcbdga |
gecf egdcabf bgf bfgea
fgeab ca afcebg bdacfeg cfaedg gcfdb baec bfadeg bafgc acf |
gebdcfa ecba ca fadegcb
dbcfg fgd bdegcaf fgec aegbdf ecdfab fbedc dacgb gdcebf gf |
cefg dcbef fcge gbcadfe
bdfegc cbegaf gecbf dfcage bdacg ed bedf ced adcbefg gebcd |
ed bcgafe cdgba cbgef
egadfb cdbfeg cegd fecab cgb gbdefca cg fgcdab egfdb bfceg |
gbdfcae bgc cg cgb
gcafb gcf dcaebfg ecagb gf abcdeg gaef cafbge fdbac fegbdc |
fgae cfgab fg bagce'
tmp_file
myfile <- readLines("input_day08.txt")
myfile
tmp_file <- readLines('be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb |
fdgacbe cefdb cefbgd gcbe
edbfga begcd cbg gc gcadebf fbgde acbgfd abcde gfcbed gfec |
fcgedb cgb dgebacf gc
fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef |
cg cg fdcagb cbg
fbegcd cbd adcefb dageb afcb bc aefdc ecdab fgdeca fcdbega |
efabcd cedba gadfec cb
aecbfdg fbg gf bafeg dbefa fcge gcbea fcaegb dgceab fcbdga |
gecf egdcabf bgf bfgea
fgeab ca afcebg bdacfeg cfaedg gcfdb baec bfadeg bafgc acf |
gebdcfa ecba ca fadegcb
dbcfg fgd bdegcaf fgec aegbdf ecdfab fbedc dacgb gdcebf gf |
cefg dcbef fcge gbcadfe
bdfegc cbegaf gecbf dfcage bdacg ed bedf ced adcbefg gebcd |
ed bcgafe cdgba cbgef
egadfb cdbfeg cegd fecab cgb gbdefca cg fgcdab egfdb bfceg |
gbdfcae bgc cg cgb
gcafb gcf dcaebfg ecagb gf abcdeg gaef cafbge fdbac fegbdc |
fgae cfgab fg bagce')
tmp_file <- 'be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb |
fdgacbe cefdb cefbgd gcbe
edbfga begcd cbg gc gcadebf fbgde acbgfd abcde gfcbed gfec |
fcgedb cgb dgebacf gc
fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef |
cg cg fdcagb cbg
fbegcd cbd adcefb dageb afcb bc aefdc ecdab fgdeca fcdbega |
efabcd cedba gadfec cb
aecbfdg fbg gf bafeg dbefa fcge gcbea fcaegb dgceab fcbdga |
gecf egdcabf bgf bfgea
fgeab ca afcebg bdacfeg cfaedg gcfdb baec bfadeg bafgc acf |
gebdcfa ecba ca fadegcb
dbcfg fgd bdegcaf fgec aegbdf ecdfab fbedc dacgb gdcebf gf |
cefg dcbef fcge gbcadfe
bdfegc cbegaf gecbf dfcage bdacg ed bedf ced adcbefg gebcd |
ed bcgafe cdgba cbgef
egadfb cdbfeg cegd fecab cgb gbdefca cg fgcdab egfdb bfceg |
gbdfcae bgc cg cgb
gcafb gcf dcaebfg ecagb gf abcdeg gaef cafbge fdbac fegbdc |
fgae cfgab fg bagce'
readLines(tmp_file)
write(tmp_file, "tmp_input_08.txt")
readLines("tmp_input_08.txt")
tmp_file <- '
be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb | fdgacbe cefdb cefbgd gcbe
edbfga begcd cbg gc gcadebf fbgde acbgfd abcde gfcbed gfec | fcgedb cgb dgebacf gc
fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef | cg cg fdcagb cbg
fbegcd cbd adcefb dageb afcb bc aefdc ecdab fgdeca fcdbega | efabcd cedba gadfec cb
aecbfdg fbg gf bafeg dbefa fcge gcbea fcaegb dgceab fcbdga | gecf egdcabf bgf bfgea
fgeab ca afcebg bdacfeg cfaedg gcfdb baec bfadeg bafgc acf | gebdcfa ecba ca fadegcb
dbcfg fgd bdegcaf fgec aegbdf ecdfab fbedc dacgb gdcebf gf | cefg dcbef fcge gbcadfe
bdfegc cbegaf gecbf dfcage bdacg ed bedf ced adcbefg gebcd | ed bcgafe cdgba cbgef
egadfb cdbfeg cegd fecab cgb gbdefca cg fgcdab egfdb bfceg | gbdfcae bgc cg cgb
gcafb gcf dcaebfg ecagb gf abcdeg gaef cafbge fdbac fegbdc | fgae cfgab fg bagce'
write(tmp_file, "tmp_input_08.txt")
readLines("tmp_input_08.txt")
tmp_file <- 'be cfbegad cbdgef fgaecd cgeb fdcge agebfd fecdb fabcd edb | fdgacbe cefdb cefbgd gcbe
edbfga begcd cbg gc gcadebf fbgde acbgfd abcde gfcbed gfec | fcgedb cgb dgebacf gc
fgaebd cg bdaec gdafb agbcfd gdcbef bgcad gfac gcb cdgabef | cg cg fdcagb cbg
fbegcd cbd adcefb dageb afcb bc aefdc ecdab fgdeca fcdbega | efabcd cedba gadfec cb
aecbfdg fbg gf bafeg dbefa fcge gcbea fcaegb dgceab fcbdga | gecf egdcabf bgf bfgea
fgeab ca afcebg bdacfeg cfaedg gcfdb baec bfadeg bafgc acf | gebdcfa ecba ca fadegcb
dbcfg fgd bdegcaf fgec aegbdf ecdfab fbedc dacgb gdcebf gf | cefg dcbef fcge gbcadfe
bdfegc cbegaf gecbf dfcage bdacg ed bedf ced adcbefg gebcd | ed bcgafe cdgba cbgef
egadfb cdbfeg cegd fecab cgb gbdefca cg fgcdab egfdb bfceg | gbdfcae bgc cg cgb
gcafb gcf dcaebfg ecagb gf abcdeg gaef cafbge fdbac fegbdc | fgae cfgab fg bagce'
write(tmp_file, "tmp_input_08.txt")
readLines("tmp_input_08.txt")
tmp_file <- readLines("tmp_input_08.txt")
tmp_file
myfile
#myfile
sapply(tmp_file, function(x) strsplit(x, " | "))
#myfile
sapply(tmp_file, function(x) strsplit(x, "[ | ]"))
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE))
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[2])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[[1]][2])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE))
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[[2]])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[[1]])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[[1]][2,])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[2,])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[2])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[1])
#myfile
sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)[1][1])
#myfile
unlist(sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)))
#myfile
tmp_list <- sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE)))
#myfile
tmp_list <- sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE))
tmp_list
sapply(tmp_list, "[[", 2)
tmp_list[[1]]
tmp_list[[1]][2]
sapply(tmp_list, function(x), x[2])
sapply(tmp_list, function(x) x[2])
tmp_list[[1]][2]
sapply(tmp_list, "[[", 1)
sapply(tmp_list, "[[", 2)
as.vector(sapply(tmp_list, "[[", 2))
outputs <- as.vector(sapply(tmp_list, "[[", 2))
as.data.frame(sapply(outputs, function(x) strsplit(x, " ")))
output_df <- as.data.frame(sapply(outputs, function(x) strsplit(x, " ")))
transpose(output_df)
library(data.table)
transpose(output_df)
output_df <- transpose(output_df)
lengths(output_df)
View(output_df)
apply(output_df, 1, lengths)
apply(output_df, 1, length)
apply(output_df, 1, nchar)
output_len_df <- apply(output_df, 1, nchar)
#1 uses 2 segments
#4 uses 4 segments
#7 uses 3 segments
#8 uses 7 segments
sum(output_len_df %in%  c(2, 3, 4, 7)])
#1 uses 2 segments
#4 uses 4 segments
#7 uses 3 segments
#8 uses 7 segments
sum(output_len_df %in%  c(2, 3, 4, 7))
#tmp_file
#myfile
get_num_segments <- function(filenm){
tmp_list <- sapply(filenm, function(x) strsplit(x, " | ", fixed = TRUE))
tmp_list[[1]][2]
outputs <- as.vector(sapply(tmp_list, "[[", 2))
output_df <- as.data.frame(sapply(outputs, function(x) strsplit(x, " ")))
library(data.table)
output_df <- transpose(output_df)
output_len_df <- apply(output_df, 1, nchar)
#1 uses 2 segments
#4 uses 4 segments
#7 uses 3 segments
#8 uses 7 segments
return(sum(output_len_df %in%  c(2, 3, 4, 7)))
}
get_num_segments(tmp_file)
get_num_segments(myfile)
tmp_list <- sapply(tmp_file, function(x) strsplit(x, " | ", fixed = TRUE))
tmp_list[[1]][2]
outputs <- as.vector(sapply(tmp_list, "[[", 2))
output_df <- as.data.frame(sapply(outputs, function(x) strsplit(x, " ")))
library(data.table)
output_df <- transpose(output_df)
output_len_df <- apply(output_df, 1, paste0)
output_len_df
output_df
output_len_df <- apply(output_df, 1, sort)
output_len_df
library(data.table)
output_df <- transpose(as.data.frame(sapply(outputs, function(x) strsplit(x, " "))))
for(i in 1:nrow(output_df)){
for j in 1:ncol(output_df){
output_df[i,j] == sort(output_df[i,j])
}
}
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] == sort(output_df[i,j])
}
}
output_df
output_df <- transpose(as.data.frame(sapply(outputs, function(x) strsplit(x, " "))))
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = stringr::str_order(output_df[i,j])
}
}
output_df
output_df <- transpose(as.data.frame(sapply(outputs, function(x) strsplit(x, " "))))
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = stringr::str_sort(output_df[i,j])
}
}
output_df
strSort <- function(x)
strSort <- function(x) sapply(lapply(strsplit(x, NULL), sort), paste0)
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = strSort(output_df[i,j])
}
}
output_df <- transpose(as.data.frame(sapply(outputs, function(x) strsplit(x, " "))))
strSort <- function(x) sapply(lapply(strsplit(x, NULL), sort), paste0)
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = strSort(output_df[i,j])
}
}
strSort(output_df[i,j])
strSort(output_df[1,2])
strSort <- function(x) sapply(lapply(strsplit(x, NULL), sort), paste, collapse="")
strSort(output_df[1,2])
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = strSort(output_df[i,j])
}
}
output_df
myfile
switch("ab",
"abcdeg"  = 0,
"ab"      = 1,
"acdfg"   = 2,
"abcdf"   = 3,
"abef"    = 4,
"bcdef"   = 5,
"bcdefg"  = 6,
"abd"     = 7,
"abcdefg" = 8,
"abcdef"  = 9)
get_seg_val <- function(x) switch(x,
"abcdeg"  = 0,
"ab"      = 1,
"acdfg"   = 2,
"abcdf"   = 3,
"abef"    = 4,
"bcdef"   = 5,
"bcdefg"  = 6,
"abd"     = 7,
"abcdefg" = 8,
"abcdef"  = 9)
get_seg_val(c("abcdeg", "ab", "acdfg"))
sapply(c("abcdeg", "ab", "acdfg"), get_seg_val)
output_num_df <- matrix(NA, nrow = nrow(output_df), ncol = ncol(output_df))
output_num_df
output_num_df <- matrix(NA, nrow = nrow(output_df), ncol = ncol(output_df))
for(i in 1:nrow(output_num_df)){
for(j in 1:ncol(output_num_df)){
output_df[i,j] = get_seg_val(strSort(output_df[i,j]))
}
}
get_seg_val <- function(x) switch(x,
"abcdeg"  = 0,
"ab"      = 1,
"acdfg"   = 2,
"abcdf"   = 3,
"abef"    = 4,
"bcdef"   = 5,
"bcdefg"  = 6,
"abd"     = 7,
"abcdefg" = 8,
"abcdef"  = 9,
NA)
myfile
output_num_df <- matrix(NA, nrow = nrow(output_df), ncol = ncol(output_df))
for(i in 1:nrow(output_num_df)){
for(j in 1:ncol(output_num_df)){
output_df[i,j] = get_seg_val(strSort(output_df[i,j]))
}
}
output_num_df
output_df <- transpose(as.data.frame(sapply(outputs, function(x) strsplit(x, " "))))
strSort <- function(x) sapply(lapply(strsplit(x, NULL), sort), paste, collapse="")
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = strSort(output_df[i,j])
}
}
for(i in 1:nrow(output_df)){
for(j in 1:ncol(output_df)){
output_df[i,j] = strSort(output_df[i,j])
}
}
output_df
